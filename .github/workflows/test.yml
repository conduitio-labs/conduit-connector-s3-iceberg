name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  # Unit tests and the Sonar analysis is done in a single job
  # because SonarCloud requires the test coverage report,
  # which is generated after unit tests are executed.
  # It's possible to do it in separate jobs (so it appears a bit prettier in the PR checks),
  # but that requires the jobs to share the report (which can be done, but doesn't pay out).
  test-analyze:
    name: Test and analyze code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Test and analyze
        env:
          # Managed through https://sonarcloud.io/account/security/
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        # Skipping the tests as they have already been run above
        # -B (batch mode) to suppress progress (pollutes logs)
        # -DskipITs to skip integration tests (they are run in a separate job)
        # -Pcoverage to use a Maven profile, which generates a test coverage report
        run: mvn -B test
